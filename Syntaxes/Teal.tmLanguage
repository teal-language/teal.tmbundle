<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>tl</string>
	</array>
	<key>firstLineMatch</key>
	<string>\A#!.*?\btl(\d+(\.\d+)?)?\b|\A--\s+-\*-\s*tl\s*-\*-</string>
	<key>name</key>
	<string>Teal</string>
	<key>scopeName</key>
	<string>source.teal</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#expression</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#statement</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>base</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-annotation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#number</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#long-string</string>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#long-comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#short-comment</string>
				</dict>
			</array>
		</dict>
		<key>long-comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>--\[(=*)\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.teal</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]\1\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.teal</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.teal</string>
				</dict>
			</array>
		</dict>
		<key>short-comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.teal</string>
					<key>match</key>
					<string>--.*$</string>
				</dict>
			</array>
		</dict>
		<key>optional</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>storage.modifier.optional.teal</string>
					<key>match</key>
					<string>(\?)</string>
				</dict>
			</array>
		</dict>
		<key>constant</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(nil|true|false)\b</string>
					<key>name</key>
					<string>constant.language.teal</string>
				</dict>
			</array>
		</dict>
		<key>number</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;![\w\d.])0[xX][0-9A-Fa-f]+(?![pPeE.0-9])</string>
					<key>name</key>
					<string>constant.numeric.integer.hexadecimal.teal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;![\w\d.])0[xX][0-9A-Fa-f]+(\.[0-9A-Fa-f]+)?([eE]-?\d*)?([pP][-+]\d+)?</string>
					<key>name</key>
					<string>constant.numeric.float.hexadecimal.teal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;![\w\d.])\d+(?![pPeE.0-9])</string>
					<key>name</key>
					<string>constant.numeric.integer.teal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;![\w\d.])\d+(\.\d+)?([eE]-?\d*)?</string>
					<key>name</key>
					<string>constant.numeric.float.teal</string>
				</dict>
			</array>
		</dict>
		<key>string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.teal</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.teal</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.teal</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#escaped-char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.teal</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.teal</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.teal</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#escaped-char</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>long-string</key>
		<dict>
			<key>begin</key>
			<string>\[(=*)\[</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.teal</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\]\1\]</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.teal</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.multiline.teal</string>
		</dict>
		<key>escaped-char</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[abfnrtvz\\"'\n]</string>
					<key>name</key>
					<string>constant.character.escape.teal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\\d{1,3}</string>
					<key>name</key>
					<string>constant.character.escape.byte.teal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\x[0-9A-Fa-f][0-9A-Fa-f]</string>
					<key>name</key>
					<string>constant.character.escape.byte.teal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\u\{[0-9A-Fa-f]+\}</string>
					<key>name</key>
					<string>constant.character.escape.unicode.teal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>invalid.illegal.character.escape.teal</string>
				</dict>
			</array>
		</dict>
		<key>expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#base</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parentheses</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin-function</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#table-constructor</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#record-or-interface-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#enum-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#self</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#field-access</string>
				</dict>
			</array>
		</dict>
		<key>parentheses</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>teal.parentheses</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>teal.brackets</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>operator</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\+|-|%|#|\*|\/|\^|==?|~=|&lt;=?|&gt;=?|(?&lt;!\.)\.{2}(?!\.)</string>
					<key>name</key>
					<string>keyword.operator.teal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(and|or|not)\b</string>
					<key>name</key>
					<string>keyword.operator.logical.teal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(as|is|in)\b</string>
					<key>name</key>
					<string>keyword.other.teal</string>
				</dict>
			</array>
		</dict>
		<key>builtin-function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;![^.]\.|:)\b(assert|collectgarbage|dofile|error|getfenv|getmetatable|ipairs|loadfile|loadstring|module|next|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|tonumber|tostring|type|unpack|xpcall)\b(?=\s*(?:[({"']|\[\[))</string>
					<key>name</key>
					<string>support.function.teal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;![^.]\.|:)\b(coroutine\.(create|resume|running|status|wrap|yield)|string\.(byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\.(concat|insert|maxn|remove|sort)|math\.(abs|acos|asin|atan2?|ceil|cosh?|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pow|rad|random|randomseed|sinh?|sqrt|tanh?)|io\.(close|flush|input|lines|open|output|popen|read|tmpfile|type|write)|os\.(clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\.(cpath|loaded|loadlib|path|preload|seeall)|debug\.(debug|[gs]etfenv|[gs]ethook|getinfo|[gs]etlocal|[gs]etmetatable|getregistry|[gs]etupvalue|traceback))\b(?=\s*(?:[({"']|\[\[))</string>
					<key>name</key>
					<string>support.function.library.teal</string>
				</dict>
			</array>
		</dict>
		<key>function-block</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\bfunction\b)</string>
					<key>end</key>
					<string>(\bend\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.declaration.function.teal</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.teal</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#function-signature</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-body</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function-signature</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\bfunction\b)</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>function.signature.teal</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#generics</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-args</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function-body</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\))</string>
			<key>end</key>
			<string>(?=\bend\b)</string>
			<key>name</key>
			<string>teal.function.body</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#statement</string>
				</dict>
			</array>
		</dict>
		<key>function-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>([a-zA-Z_][a-zA-Z0-9_]*)</string>
					<key>name</key>
					<string>support.function.name.teal</string>
				</dict>
			</array>
		</dict>
		<key>generics</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>&lt;</string>
					<key>end</key>
					<string>&gt;</string>
					<key>name</key>
					<string>type.arguments.teal</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#type-arg</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>type-arg</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[a-zA-Z_][a-zA-Z0-9_]*</string>
					<key>name</key>
					<string>support.type.teal</string>
				</dict>
			</array>
		</dict>
		<key>function-args</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>(?=\))</string>
					<key>name</key>
					<string>function.arguments.teal</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-arg-name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-arg-type</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function-arg-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>First argument</string>
					<key>begin</key>
					<string>(?&lt;=\()</string>
					<key>end</key>
					<string>(?=:|\))</string>
					<key>name</key>
					<string>function.argument.teal</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#optional</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>comment</key>
					<string>Nth argument</string>
					<key>begin</key>
					<string>,</string>
					<key>end</key>
					<string>(?=:|\))</string>
					<key>name</key>
					<string>function.argument.teal</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#optional</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function-arg-type</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>:</string>
					<key>end</key>
					<string>(?=,|\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#type</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>type</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#function-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#table-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generics</string>
				</dict>
			</array>
		</dict>
		<key>extendable-type</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\bis\b)</string>
					<key>end</key>
					<string>(\bwhere\b|[\r\n]+)</string>
					<key>name</key>
					<string>entity.other.inherited-class.teal</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.is.teal</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.where.teal</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#type</string>
				</dict>
			</array>
		</dict>
		<key>function-type</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\bfunction\b)\s*(&lt;\s*)?([a-zA-Z_][a-zA-Z0-9_, ]*\s*)?(&gt;\s*)?\(</string>
					<key>end</key>
					<string>\)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.declaration.function.teal</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.type.teal</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-arg-name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-arg-type</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#type</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(\bfunction\b)\s*(&lt;\s*)?([a-zA-Z_][a-zA-Z0-9_, ]*\s*)?(&gt;\s*)?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.declaration.function.teal</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.type.teal</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>table-type</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>support.tabletype.teal</string>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#type</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>type-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[a-zA-Z_][a-zA-Z0-9_]*</string>
					<key>name</key>
					<string>support.type.teal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>punctuation.accessor.teal</string>
				</dict>
			</array>
		</dict>
		<key>function-call</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b((?!\bfunction\b|\breturn\b|\bif\b|\belseif\b|\bwhile\b|\buntil\b|\bin\b)[a-zA-Z_][a-zA-Z0-9_]*)\b(?=\s*(?:\())</string>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>name</key>
					<string>function-call</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.any-method.teal</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#parentheses</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b((?!\bfunction\b|\breturn\b|\bif\b|\belseif\b|\bwhile\b|\buntil\b|\bin\b)[a-zA-Z_][a-zA-Z0-9_]*)\b(?=\s*(?:\{))</string>
					<key>end</key>
					<string>(?&lt;=})</string>
					<key>name</key>
					<string>function-call</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.any-method.teal</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#table-constructor</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b((?!\bfunction\b|\breturn\b|\bif\b|\belseif\b|\bwhile\b|\buntil\b|\bin\b)[a-zA-Z_][a-zA-Z0-9_]*)\b(?=\s*("|'))</string>
					<key>end</key>
					<string>(?&lt;=\2)</string>
					<key>name</key>
					<string>function-call</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.any-method.teal</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b((?!\bfunction\b|\breturn\b|\bif\b|\belseif\b|\bwhile\b|\buntil\b|\bin\b)[a-zA-Z_][a-zA-Z0-9_]*)\b(?=\s*(\[(=*)\[))</string>
					<key>end</key>
					<string>(?&lt;=\]\3\])</string>
					<key>name</key>
					<string>function-call</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.any-method.teal</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#long-string</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>table-constructor</key>
		<dict>
			<key>begin</key>
			<string>{</string>
			<key>end</key>
			<string>}</string>
			<key>name</key>
			<string>teal.table-constructor</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>=</string>
					<key>end</key>
					<string>;|,|(?=})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>teal.brackets</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>:</string>
					<key>end</key>
					<string>(?&lt;=\))|(?=[=,};])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-call</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#type</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>[a-zA-Z_][a-zA-Z0-9_]*\s*(?=.+=)</string>
					<key>name</key>
					<string>variable.other.teal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>record-or-interface-block</key>
		<dict>
			<key>begin</key>
			<string>(\b(record|interface)\b)</string>
			<key>end</key>
			<string>(\bend\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>storage.type.record.teal</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.teal</string>
				</dict>
			</dict>
			<key>name</key>
			<string>statement.record-or-interface-block.teal</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#extendable-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#enum-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#record-or-interface-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#new-type-declaration</string>
				</dict>
				<dict>
					<key>match</key>
					<string>^\s*\buserdata\b</string>
					<key>name</key>
					<string>storage.type.userdata.teal</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*\bmetamethod\b</string>
					<key>end</key>
					<string>:</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.metamethod.teal</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#function-name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>^\s*([a-zA-Z_][a-zA-Z0-9_]*)\s*:</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.teal</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#type</string>
				</dict>
			</array>
		</dict>
		<key>new-type-declaration</key>
		<dict>
			<key>begin</key>
			<string>\b(type)\b</string>
			<key>end</key>
			<string>$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.declaration.type.teal</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>[a-zA-Z_][a-zA-Z0-9_]*</string>
					<key>end</key>
					<string>=|$</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>support.type.teal</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;==)</string>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#record-or-interface-block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#enum-block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#type</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>enum-block</key>
		<dict>
			<key>begin</key>
			<string>(\benum\b)</string>
			<key>end</key>
			<string>(\bend\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>storage.type.enum.teal</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.teal</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[a-zA-Z_][a-zA-Z0-9_]*</string>
					<key>name</key>
					<string>support.type.teal</string>
				</dict>
			</array>
		</dict>
		<key>self</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![^.]\.|:)\b(self)\b</string>
			<key>name</key>
			<string>variable.language.self.teal</string>
		</dict>
		<key>field-access</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=[^.]\.|:)\b([a-zA-Z_][a-zA-Z0-9_]*)</string>
			<key>name</key>
			<string>variable.other.teal</string>
		</dict>
		<key>statement</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#if-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#do-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#repeat-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#while-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#for-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#goto</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#label</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#break</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#return</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#scope-modifier</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-annotation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#new-type-declaration</string>
				</dict>
			</array>
		</dict>
		<key>if-block</key>
		<dict>
			<key>begin</key>
			<string>(\bif\b)</string>
			<key>end</key>
			<string>(\bend\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.if.teal</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.teal</string>
				</dict>
			</dict>
			<key>name</key>
			<string>statement.if-block.teal</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bthen\b</string>
					<key>name</key>
					<string>keyword.control.if-then.teal</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\belseif\b)</string>
					<key>end</key>
					<string>(\bthen\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.elseif.teal</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.then.teal</string>
						</dict>
					</dict>
					<key>name</key>
					<string>statement.elseif.teal</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\belse\b</string>
					<key>name</key>
					<string>keyword.control.else.teal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#statement</string>
				</dict>
			</array>
		</dict>
		<key>do-block</key>
		<dict>
			<key>begin</key>
			<string>(\bdo\b)</string>
			<key>end</key>
			<string>(\bend\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.teal</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.teal</string>
				</dict>
			</dict>
			<key>name</key>
			<string>statement.do-block.teal</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#statement</string>
				</dict>
			</array>
		</dict>
		<key>repeat-block</key>
		<dict>
			<key>begin</key>
			<string>(\brepeat\b)</string>
			<key>end</key>
			<string>(\buntil\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.teal</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.teal</string>
				</dict>
			</dict>
			<key>name</key>
			<string>statement.repeat-block.teal</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#statement</string>
				</dict>
			</array>
		</dict>
		<key>while-block</key>
		<dict>
			<key>begin</key>
			<string>(\bwhile\b)</string>
			<key>end</key>
			<string>(\bend\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.teal</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.teal</string>
				</dict>
			</dict>
			<key>name</key>
			<string>statement.while-block.teal</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\bwhile\b)</string>
					<key>end</key>
					<string>\bdo\b</string>
					<key>name</key>
					<string>teal.while.expression</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.do.teal</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\bdo\b)</string>
					<key>end</key>
					<string>(?=\bend\b)</string>
					<key>name</key>
					<string>teal.while.body</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#statement</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>for-block</key>
		<dict>
			<key>begin</key>
			<string>(\bfor\b)</string>
			<key>end</key>
			<string>(\bend\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.teal</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.teal</string>
				</dict>
			</dict>
			<key>name</key>
			<string>statement.for.teal</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\bfor\b)</string>
					<key>end</key>
					<string>\bdo\b</string>
					<key>name</key>
					<string>teal.for.expression</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.do.teal</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\bdo\b)</string>
					<key>end</key>
					<string>(?=\bend\b)</string>
					<key>name</key>
					<string>teal.for.body</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#statement</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>goto</key>
		<dict>
			<key>match</key>
			<string>\b(goto)\b</string>
			<key>name</key>
			<string>keyword.control.teal</string>
		</dict>
		<key>label</key>
		<dict>
			<key>match</key>
			<string>::([a-zA-Z_][a-zA-Z0-9_]*)::</string>
			<key>name</key>
			<string>entity.name.label.teal</string>
		</dict>
		<key>break</key>
		<dict>
			<key>match</key>
			<string>\b(break)\b</string>
			<key>name</key>
			<string>keyword.control.teal</string>
		</dict>
		<key>return</key>
		<dict>
			<key>match</key>
			<string>\b(return)\b</string>
			<key>name</key>
			<string>keyword.control.teal</string>
		</dict>
		<key>scope-modifier</key>
		<dict>
			<key>match</key>
			<string>\b(local|global)\b</string>
			<key>name</key>
			<string>storage.modifier.teal</string>
		</dict>
		<key>variable-annotation</key>
		<dict>
			<key>match</key>
			<string>\&lt;\b(const|close|total)\b\&gt;</string>
			<key>name</key>
			<string>storage.modifier.annotation.teal</string>
		</dict>
		<key>type-annotation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Matches the type annotations that have not yet been matched by other rules. Matches method calls as well. Assumes that one line functions with a return type contain only a 'return' statement...</string>
					<key>begin</key>
					<string>:</string>
					<key>end</key>
					<string>(?&lt;=\))|=|;|$|(?=\breturn\b)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-call</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#type</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
</dict>
</plist>
